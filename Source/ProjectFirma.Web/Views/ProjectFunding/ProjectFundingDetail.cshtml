@*-----------------------------------------------------------------------
    <copyright file="ProjectFundingDetail.cshtml" company="Tahoe Regional Planning Agency & Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency & Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using LtInfo.Common
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectFunding.ProjectFundingDetail
<div class="table-responsive">

    @if (ViewDataTyped.FundingSourceRequestAmounts.Any())
    {
        <div style="overflow-x: auto">
            <table class="table table-striped table-condensed table-hover">
                <tr>
                    <th>@Html.LabelWithSugarFor(FieldDefinitionEnum.FundingSource.ToType())</th>
                    <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType())</th>
                    <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType())</th>
                    <th class="text-right">Total</th>
                </tr>
                @foreach (var projectFundingSourceRequest in ViewDataTyped.FundingSourceRequestAmounts.OrderBy(x => x.FundingSource.GetDisplayName()))
                {
                    <tr>
                        <td>@Html.Raw(projectFundingSourceRequest.FundingSource.GetDisplayNameAsUrl())</td>
                        <th class="text-right">@projectFundingSourceRequest.SecuredAmount.ToStringCurrency()</th>
                        <th class="text-right">@projectFundingSourceRequest.UnsecuredAmount.ToStringCurrency()</th>
                        <th class="text-right">@((projectFundingSourceRequest.UnsecuredAmount + projectFundingSourceRequest.SecuredAmount).ToStringCurrency())</th>
                    </tr>
                }
                @if (ViewDataTyped.FundingSourceRequestAmounts.Any())
                {
                    <tr>
                        <th>Total</th>
                        <th class="text-right">@ViewDataTyped.FundingSourceRequestAmounts.Sum(x => x.SecuredAmount).ToStringCurrency()</th>
                        <th class="text-right">@ViewDataTyped.FundingSourceRequestAmounts.Sum(x => x.UnsecuredAmount).ToStringCurrency()</th>
                        <th class="text-right">@ViewDataTyped.FundingSourceRequestAmounts.Sum(x => x.SecuredAmount + x.UnsecuredAmount).ToStringCurrency()</th>
                    </tr>
                }
            </table>
        </div>
    }
    else
    {
        <p class="systemText">No funding sources identified for this @(FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()).</p>
    }
</div>
