@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Mvc
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.Shared.ProjectAttachment.NewProjectAttachment


    <script src="@Url.Content("~/Content/angular/directives/input-type-file.js")"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function() {

            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
            };
        });
        jQuery(document).ready(function ()
        {
            angular.bootstrap(jQuery("#NewProjectAttachmentAngularApp"), ["ProjectFirmaApp", "app.Components.InputTypeFile"]);

            jQuery("form").attr("novalidate", "");
        });
        // ]]>
    </script>



@using (Html.BeginForm())
{
    <div class="form-horizontal" id="NewProjectAttachmentAngularApp" ng-controller="NewProjectAttachmentController" ng-form="attachmentForm">
        <div>
            You can upload a range of document formats here, including some image formats (for diagrams, plans, illustrations). However, we encourage you to upload photos in the Photos section.
        </div>
        @Html.HiddenFor(m => m.ProjectID)
        @Html.HiddenFor(m => m.ProjectUpdateBatchID)
        <div class="form-group">
            <div class="col-xs-12 col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.AttachmentRelationshipTypeID)
            </div>
            <div class="col-xs-12 col-sm-9">
                <select class="form-control" ng-model="AttachmentRelationshipTypeID" ng-change="attachmentRelationshipTypeChange(AttachmentRelationshipTypeID)" data-width="100%">
                    <option ng-repeat="attachmentRelationshipType in getAttachmentRelationshipTypesForDropdown()"
                            ng-bind="attachmentRelationshipType.AttachmentRelationshipTypeName"
                            ng-value="attachmentRelationshipType.AttachmentRelationshipTypeID"
                            ng-selected="isAttachmentRelationshipTypeSelected(attachmentRelationshipType.AttachmentRelationshipTypeID)"></option>
                </select>
                @*@Html.ValidationMessageFor(m => m.AttachmentRelationshipTypeID)*@
                <input type="hidden" name="@Html.NameFor(x => x.AttachmentRelationshipTypeID)" value="{{AngularModel.AttachmentRelationshipTypeID}}" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.UploadedFile)
            </div>
            <div class="col-xs-12 col-sm-9">
                @*@Html.EditorFor(m => m.UploadedFile)*@
                <input type="file" id="@Html.IdFor(m => m.UploadedFile)" name="@Html.NameFor(m => m.UploadedFile)" ng-change="fileUploadedChange()" ng-model="UploadedFile" accept="image/jpeg" maxsize="100000000" />
                @*@Html.ValidationMessageFor(m => m.UploadedFile)*@
                <p class="help-block">Allowed Extensions: <span>{{ AllowedMimeTypes }}</span></p>
                <p>{{ attachmentForm.$valid }}</p>
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.DisplayName)
            </div>
            <div class="col-xs-12 col-sm-9">
                @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(m => m.DisplayName)*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.Description)
            </div>
            <div class="col-xs-12 col-sm-9">
                @Html.TextAreaWithMaxLengthFor(m => m.Description, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string> { "form-control" })
                @*@Html.ValidationMessageFor(m => m.Description)*@
            </div>
        </div>
    </div>
}
