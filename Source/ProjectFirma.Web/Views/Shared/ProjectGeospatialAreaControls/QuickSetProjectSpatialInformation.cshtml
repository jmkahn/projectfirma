
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@inherits ProjectFirma.Web.Views.Shared.ProjectGeospatialAreaControls.QuickSetProjectSpatialInformation


<script type="text/javascript" src="@Url.Content("~/Views/Shared/ProjectGeospatialAreaControls/QuickSetProjectSpatialInformationController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
        function() {
            return {
                "AngularModel": @Html.Raw(JObject.FromObject(Model).ToString(Formatting.None)),
                "AngularViewData":
                    @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None))
            };
        });
    angular.bootstrap(jQuery("[ng-controller=\"QuickSetProjectSpatialInformationController\"]"), ["ProjectFirmaApp"]);
    // ]]>
</script>
<style>
    #@ViewDataTyped.ViewDataForAngular.MapInitJson.MapDivID {
        height: 500px;
        margin: 0;
    }

    .firma-modal .modal-body {
        overflow-y: visible;
    }
    .select-all-container {
        padding: 19px;
    }
    .select-all-container label {
        position: relative;
        display: block;
        margin-bottom: -1px;
        text-align: right;
    }
    .select-all-container label input {
        margin-left: 5px;
    }
</style>
<div class="row">
    <div class="col-xs-12">
        <p>This section allows users to quickly set the spatial location for all steps/layers--or just a single one--by using the simple location. From there, users can then either refine the selection of shapes, or skip straight to the Accomplishments portion of the workflow.</p>
    </div>
</div>
@Html.ValidationSummary()
<div class="row" ng-app="ProjectFirmaApp" ng-controller="QuickSetProjectSpatialInformationController">
    <div class="col-xs-12 col-md-5">
        <form action="@ViewDataTyped.EditProjectGeospatialAreasUrl" method="POST" id="@ViewDataTyped.EditProjectGeospatialAreasFormID">
            <div class="input-group">
                @*<button type="button" class="btn btn-sm btn-firma" ng-click="setGeospatialAreaFromProjectLocation()" ng-disabled="!canSetGeospatialAreaFromProjectLocation()">
                    <span class="glyphicon glyphicon-map-marker"></span>
                    Set from Simple Location
                </button>*@
                @*<div class="alert alert-warning" ng-if="selectedGeospatialAreaDoesNotMatchProjectLocation() && canSetGeospatialAreaFromProjectLocation() && !noGeospatialAreasSelected()">
                    <span>The currently selected @ViewDataTyped.GeospatialAreaType.GeospatialAreaTypeName does not match the project simple location - this may be OK if the project location is outside the associated boundary, or may require updating either the simple location or the associated area.</span>
                </div>*@
                <div class="alert alert-danger" ng-if="!canSetGeospatialAreaFromProjectLocation()">
                    <span>The Project Simple Location is not set. Please set the Simple Location before using this page</span>
                </div>
                <hr />
            </div>
            
            <div ng-if="canSetGeospatialAreaFromProjectLocation()">
                <button type="button" class="btn btn-sm btn-firma" ng-click="setSelectedGeospatialAreaTypeFromProjectLocation()" ng-disabled="!canSetGeospatialAreaFromProjectLocation()">
                    <span class="glyphicon glyphicon-map-marker"></span>
                    Set All Selected Layers from Simple Location
                </button>
                <div class="select-all-container">
                    <label>
                        Select All <input type="checkbox" ng-click="selectAll($event)"  />
                    </label>
                </div>
                <div class="well" ng-repeat="geospatialAreaType in AngularViewData.GeospatialAreaTypes">
                    <label style="width: 100%;">
                        {{geospatialAreaType.GeospatialAreaTypeName}}
                        <input type="checkbox" name="geospatialAreaType" class="pull-right" value="{{geospatialAreaType.GeospatialAreaTypeID}}" />
                    </label>
                </div>
            </div>

            @*<div class="alert alert-warning" ng-if="noGeospatialAreasSelected()">
                No @ViewDataTyped.GeospatialAreaType.GeospatialAreaTypeNamePluralized selected for this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel(), provide an explanation in the @Html.DisplayNameFor(m => m.ProjectGeospatialAreaNotes) field or select a @ViewDataTyped.GeospatialAreaType.GeospatialAreaTypeName.
            </div>
            <div ng-if="AngularModel.GeospatialAreaIDs.length >= 1" style="max-height:350px; overflow-y: auto">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>@ViewDataTyped.GeospatialAreaType.GeospatialAreaTypeName Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="geospatialAreaId in AngularModel.GeospatialAreaIDs">
                            <td>
                                <input type="hidden" name="@Html.NameFor(x => x.GeospatialAreaIDs)" value="{{geospatialAreaId}}" />
                                <a ng-click="toggleGeospatialArea(geospatialAreaId)">
                                    <i class="glyphicon glyphicon-trash"></i>
                                </a>
                            </td>
                            <td ng-bind="getGeospatialAreaName(geospatialAreaId)"></td>
                        </tr>
                    </tbody>
                </table>
            </div>*@
            @*<div>
                <div class="form-group">
                    <label class="control-label">@Html.DisplayNameFor(m => m.ProjectGeospatialAreaNotes)</label>
                    <textarea class="form-control" style="resize: none;" name="@Html.NameFor(m => m.ProjectGeospatialAreaNotes)"
                              ng-model="AngularModel.@Html.NameFor(m => m.ProjectGeospatialAreaNotes)"></textarea>
                    @Html.ValidationMessageFor(m => m.ProjectGeospatialAreaNotes)
                </div>
            </div>*@

        </form>
    </div>
    <div class="col-xs-12 col-md-7">
        <div id="mapContainer">
            <div id="@ViewDataTyped.ViewDataForAngular.MapInitJson.MapDivID"></div>
        </div>
        @if (ViewDataTyped.HasProjectLocationPoint || ViewDataTyped.HasProjectLocationDetail)
        {
            <div>
                <img style="margin-top: 10px; margin-right: 5px;" src="@ViewDataTyped.SimplePointMarkerImg"> Simple and/or Detailed @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() location (for reference)
            </div>
        }
    </div>
</div>