@using LtInfo.Common.HtmlHelperExtensions
@using Microsoft.Web.Mvc.Html
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.Shared
@inherits ProjectFirma.Web.Views.ProjectCustomAttributeType.Edit

<script type="text/javascript" src="@Url.Content("~/Views/ProjectCustomAttributeType/EditProjectCustomAttributeTypeController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    jQuery(function() {
        angular.module("ProjectFirmaApp")
            .factory("angularModelAndViewData",
                function()
                {
                    return {
                        AngularModel: @Html.Raw(JObject.FromObject(Model).ToString(Formatting.None)),
                        AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None))
                    };
                });
        angular.bootstrap(jQuery("[ng-controller=\"EditProjectCustomAttributeTypeController\"]"), ["ProjectFirmaApp"]);
    });
    // ]]>
</script>

@{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewInstructionsFirmaPage); }

<form method="POST" action="@ViewDataTyped.SubmitUrl" id="EditProjectCustomAttributeTypeControllerApp" name="customAttributeTypeForm"
      ng-app="ProjectFirmaApp" ng-controller="EditProjectCustomAttributeTypeController" ng-submit="submit()" ng-cloak>
    @Html.HiddenFor(m => m.ProjectCustomAttributeTypeID)
    <input type="hidden" name="@Html.NameFor(m => m.ProjectCustomAttributeTypeOptionsSchema)" ng-value="AngularModel.ProjectCustomAttributeTypeOptionsSchema" />
    <div class="row">
        <div class="col-xs-12">
            <div class="validationError">
                @Html.ValidationSummary()
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelWithSugarFor(m => m.ProjectCustomAttributeTypeName)
                    </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.ProjectCustomAttributeTypeName, new { @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeTypeName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelWithSugarFor(m => m.IsRequired)
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.IsRequired, ViewDataTyped.YesNos, new Dictionary<string, object> { { "style", "width: auto" }, { "class", "form-control" } })
                        @Html.ValidationMessageFor(m => m.IsRequired)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelWithSugarFor(m => m.ProjectCustomAttributeTypeDesription)
                    </div>
                    <div class="col-sm-9">
                        @Html.TextAreaWithMaxLengthFor(m => m.ProjectCustomAttributeTypeDesription, new TextAreaForExtensions.TextAreaDimensions(null, 3), null, new List<string> { "form-control" })
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeTypeDesription)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelWithSugarFor(m => m.ProjectCustomAttributeDataTypeID)
                    </div>
                    <div class="col-sm-9">
                        <select class="form-control"
                                style="width: auto"
                                name="ProjectCustomAttributeDataTypeID"
                                ng-model="ProjectCustomAttributeDataTypeID"
                                ng-change="updateProjectCustomAttributeDataType()"
                                ng-required="true">
                            <option value="">&lt;Choose one&gt;</option>
                            <option ng-repeat="customAttributeDataType in AngularViewData.ProjectCustomAttributeDataTypes"
                                    ng-selected="AngularModel.ProjectCustomAttributeDataTypeID == customAttributeDataType.ID"
                                    ng-value="customAttributeDataType.ID">
                                {{customAttributeDataType.DisplayName}}
                            </option>
                        </select>
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeDataTypeID)
                    </div>
                </div>
                <div ng-if="ProjectCustomAttributeDataTypeSelected == null">
                    <div class="alert alert-warning" role="alert">
                        Select a @FieldDefinitionEnum.ProjectCustomAttributeDataType.ToType().GetFieldDefinitionLabel() to enter the required information
                    </div>
                </div>
                <div ng-if="ProjectCustomAttributeDataTypeSelected != null">
                    <div ng-if="selectedProjectCustomAttributeDataTypeHasMeasurementUnit()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(m => m.MeasurementUnitTypeID, true)
                            </div>
                            <div class="col-sm-9">
                                @Html.DropDownListFor(x => x.MeasurementUnitTypeID, ViewDataTyped.MeasurementUnitTypes, new { style = "width: auto;", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.MeasurementUnitTypeID)
                            </div>
                        </div>
                    </div>
                    <div ng-if="selectedProjectCustomAttributeDataTypeHasOptions()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(m => m.ProjectCustomAttributeTypeOptionsSchema, true)
                            </div>
                            <div class="col-sm-9">
                                <div class="row">
                                    <div ng-repeat="item in OptionsSchema track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                        <div class="input-group input-group-sm">
                                            <input class="form-control"
                                                   ng-model="OptionsSchema[$index]"
                                                   type="text"
                                                   value="{{OptionsSchema[$index]}}"
                                                   placeholder="e.g. Sand, Compost">
                                            <div class="input-group-btn">
                                                <a class="btn btn-firma"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-4">
                                        <button class="btn btn-firma btn-sm" type="button" ng-click="addInput()">
                                            <span class="glyphicon glyphicon-plus"></span>
                                            Add
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">                       
                        <strong>Editable By</strong>
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(x => x.ProjectCustomAttributeEditableBy, ViewDataTyped.EditableByRoleID, new { style = "width: auto;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeEditableBy)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">                       
                        <strong>Viewable By</strong>
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(x => x.ProjectCustomAttributeViewableBy, ViewDataTyped.ViewableByRoleID, new { style = "width: auto;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeViewableBy)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        <strong>Include in NTA Grids?</strong>
                    </div>
                    <div class="col-sm-9">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.ProjectCustomAttributeIncludeInNtaGrid, true) Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.ProjectCustomAttributeIncludeInNtaGrid, false) No
                        </label>
                        @Html.ValidationMessageFor(m => m.ProjectCustomAttributeIncludeInNtaGrid)
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
