@*-----------------------------------------------------------------------
    <copyright file="EditNote.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.ProjectProjectStatus.EditProjectProjectStatus
@using (Html.BeginForm())
{

    <div class="row">
        <div class="col-xs-12">
            <div class="form-horizontal">

                <div class="form-group" style="@(ViewDataTyped.AllowEditUpdateDate ? "" : "display: none;")">
                    <div class="col-sm-4 control-label">
                        @Html.LabelWithSugarFor(m => m.ProjectStatusUpdateDate)
                    </div>
                    <div class="col-sm-8">
                        @Html.EditorFor(m => m.ProjectStatusUpdateDate, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.ProjectStatusUpdateDate)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-4 control-label">
                        @Html.LabelWithSugarFor(m => m.ProjectStatusID)
                    </div>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.ProjectStatusID, ViewDataTyped.ProjectStatuses, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.ProjectStatusID)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.ProjectProjectStatusComment)</div>
                    <div class="col-sm-8">
                        @Html.TextAreaWithMaxLengthFor(m => m.ProjectProjectStatusComment, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string> {"form-control"})
                        @Html.ValidationMessageFor(m => m.ProjectProjectStatusComment)
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    jQuery(document).ready(function() {

        var projectStatuses = @Html.Raw(JObject.FromObject(ViewDataTyped.ProjectStatusJsonList.ProjectStatusJsons).ToString(Formatting.None));

        function mapOptionToColor(optionVal) {
            return projectStatuses[optionVal].Color;
        }


        jQuery('select#@Html.IdFor(m => m.ProjectStatusID) option').each(function () {
            var option = jQuery(this);
            if (projectStatuses[option.val()] !== undefined) {
                option.css(
                    'color',
                    mapOptionToColor(option.val())
                );
            }
            else {
                option.css('color', "#555");

            }
        });

        jQuery("#@Html.IdFor(m => m.ProjectStatusID)").change(function() {
            console.log('change');
            var valOfSelection = jQuery(this).val();
            console.log(valOfSelection);
            if (valOfSelection !== undefined && valOfSelection != '' && valOfSelection != null) {
                jQuery(this).css('color', mapOptionToColor(valOfSelection));
            }
            else {
                jQuery(this).css('color', "#555");
            }
        });


    });


</script>

