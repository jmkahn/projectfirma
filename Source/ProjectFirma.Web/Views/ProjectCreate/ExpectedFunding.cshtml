@*-----------------------------------------------------------------------
<copyright file="ExpectedFunding.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using LtInfo.Common
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectCreate.ExpectedFunding

@section JavascriptAndStylesContent
{
    <script src="@Url.Content("~/Views/ProjectCreate/ExpectedFundingController.js")" type="text/javascript"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
            };
        });
        // ]]>
    </script>

}
    <p>
        Enter the expected funding for your @(FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()). You may enter multiple @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized()).
        For each @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel()), provide the amount of funding that has been secured, and the amount that is targeted but not yet secured. If the amount of Secured or @FieldDefinitionEnum.TargetedFunding.ToType().GetFieldDefinitionLabel() is unknown, you can leave the amounts blank.
    </p>
    <p>The @FieldDefinitionEnum.NoFundingSourceIdentified.ToType().GetFieldDefinitionLabel() is the difference between the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s Estimated Total Cost (as entered on the Basics page) and the Secured Funding.</p>

<hr />

@using (Html.BeginForm())
{
    <div ng-app="ProjectFirmaApp" ng-controller="ExpectedFundingController">
        <div class="form-group">
            <label class="control-label">@FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add:</label>
            <div class="input-group">
                <select ng-model="FundingSourceIDToAdd" 
                        class="selectpicker"
                        data-live-search="true"
                        data-container="body"
                        title="Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add"
                        data-width="70%">
                    <option value="null" disabled selected>Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add</option>
                    <option ng-repeat="fundingSource in filteredFundingSources()"
                            value="{{fundingSource.FundingSourceID}}"
                            ng-selected="FundingSourceIDToAdd == fundingSource.FundingSourceID"
                            ng-bind="fundingSource.DisplayName"
                            data-tokens="{{fundingSource.DisplayName}} {{fundingSource.OrganizationFullName}}"></option>
                </select>
                <span class="input-group-btn">
                    <button class="btn btn-firma" type="button" ng-click="addRow()">
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </button>
                </span>
            </div>
            <p style="font-size: 12px;">
                Not listed?
                @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
            </p>
        </div>
        <div style="overflow-x: auto" class="form-inline">
            <table class="table" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.ProjectFundingSourceRequests.length > 0">
                <tr>
                    <th></th>
                    <th>@Html.LabelWithSugarFor(FieldDefinitionEnum.FundingSource.ToType())</th>
                    <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType())</th>
                    <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType())</th>
                    <th style="text-align: right">Total</th>
                </tr>
                <tr ng-repeat="projectFundingSourceRequest in AngularModel.ProjectFundingSourceRequests | orderBy:[getFundingSourceName]">
                    <td>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceRequest)" style="cursor: pointer"></span>
                    </td>
                    <td ng-bind="getFundingSourceName(projectFundingSourceRequest)"></td>
                    <td style="text-align: right">
                        <input type="text" style="text-align: right" ng-model="projectFundingSourceRequest.SecuredAmount" class="sitkaCurrency form-control " ng-currency/>
                    </td>
                    <td style="text-align: right">
                        <input type="text" style="text-align: right" ng-model="projectFundingSourceRequest.UnsecuredAmount" class="sitkaCurrency form-control" ng-currency/>
                    </td>
                    <th style="text-align: right">
                        {{ getRowTotal(projectFundingSourceRequest) | currency:"$"}}
                    </th>
                </tr>
                <tr>
                    <th colspan="2">Total</th>
                    <th style="text-align: right">
                        {{ getSecuredTotal() | currency:"$"}}
                    </th>
                    <th style="text-align: right">
                        {{ getUnsecuredTotal() | currency:"$"}}
                    </th>
                    <th style="text-align: right">
                        {{ getTotal() | currency:"$"}}
                    </th>
                </tr>
            </table>
        </div>


        <div ng-repeat="projectFundingSourceRequest in AngularModel.ProjectFundingSourceRequests | orderBy:[getFundingSourceName]">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceRequests[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceRequest.ProjectID}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceRequests[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceRequest.FundingSourceID}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceRequests[0].SecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceRequest.SecuredAmount}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceRequests[0].UnsecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceRequest.UnsecuredAmount}}"/>
        </div>
        <hr/>

        <div style="margin: 10px 0px; padding: 5px 10px;">
            <p>
                <label class="control-label">Summary of Total @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() Costs and Funding:</label>
            </p>
            @if (ViewDataTyped.Project.FundingTypeID == FundingType.BudgetSameEachYear.FundingTypeID)
                {
                <table>
                    <tr>
                        <td style="width: 240px">
                            Estimated Annual Operating Cost:
                        </td>
                        <td>
                            <span>@ViewDataTyped.Project.EstimatedAnnualOperatingCost.ToStringCurrency()</span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Estimated Total Operating Cost:
                        </td>
                        <td>
                            <span>@ViewDataTyped.Project.EstimatedTotalCost</span>
                        </td>
                    </tr>
                </table>
            }
            else
            {
                <div class="row">
                    <div class="col-sm-3">@Html.LabelWithSugarFor(FieldDefinitionEnum.EstimatedTotalCost.ToType()):</div>
                    <div class="col-sm-3 text-right">
                        <span>
                            {{ AngularViewData.EstimatedTotalCost | currency:"$"}}
                        </span>
                    </div>
                </div>

                    <div class="row">
                        <div class="col-sm-3">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType()):</div>
                        <div class="col-sm-3 text-right">
                            <span>
                                {{getSecuredTotal() | currency:"$"}}
                            </span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3">@Html.LabelWithSugarFor(FieldDefinitionEnum.NoFundingSourceIdentified.ToType(), FieldDefinitionEnum.NoFundingSourceIdentified.ToType().GetFieldDefinitionLabel() + ":")</div>
                        <div class="col-sm-3 text-right">
                            <span>
                                {{ (AngularViewData.EstimatedTotalCost - getSecuredTotal()) | currency:"$"}}
                            </span>
                        </div>
                        <div class="col-sm-6 text-right" ng-show="getUnsecuredTotal() > 0">
                            (<span>
                                 {{(getUnsecuredTotal()) | currency:"$"}}
                            </span> identified as @Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType()))
                        </div>
                    </div>
            }
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <hr />
        <div class="pull-right">
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(false)">Save</button>
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(true)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
        </div>
    </div>
</div>
<script type="text/javascript">
    // <![CDATA[

    jQuery(document).ready(function () {
        HookupCheckIfFormIsDirty(undefined, ".submitProject");
    });

    function saveForm(autoAdvance) {
        var form = jQuery("form");
        // Do not submit if the form
        // does not pass client side validation

        if (!form.valid()) {
            return false;
        }
        form.append('<input type="hidden" name="@Html.NameFor(x => x.AutoAdvance)" value=' + autoAdvance + ' />');
        var noMeasuresDiv = jQuery("#ExplanationForNoMeasuresDiv");
        noMeasuresDiv.appendTo(form);

        form.submit();
    }

    // ]]>
</script>