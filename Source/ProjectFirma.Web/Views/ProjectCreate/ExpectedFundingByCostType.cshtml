@*-----------------------------------------------------------------------
    <copyright file="BudgetsByCostType.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of@ViewDataTyped.ProjectFieldDefinition
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.ProjectCreate
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ExpectedFundingByCostType
@section JavascriptAndStylesContent
{
    <script src="@Url.Content("~/Views/ProjectCreate/ExpectedFundingByCostTypeController.js")" type="text/javascript"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
            };
        });
        jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
        // ]]>
    </script>
}

<p>
    Enter your @(ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel())'s total budget by @(ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel()) based on its @ViewDataTyped.FieldDefinitionForPlanningDesignStartYear.GetFieldDefinitionLabel() and @ViewDataTyped.FieldDefinitionForCompletionYear.GetFieldDefinitionLabel().
    You must budget by  @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel(), by @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel(), by Year, and indicate whether the funding amount is @ViewDataTyped.FieldDefinitionForSecuredFunding.GetFieldDefinitionLabel() or @ViewDataTyped.FieldDefinitionForTargetedFunding.GetFieldDefinitionLabel().
    Enter the value of any funding gaps for which you have not identified a @(ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel()) in the "@(ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified.GetFieldDefinitionLabel())" row.
    If you haven't yet identified any @(ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabelPluralized()), you can skip step 3 and just enter values in the "@(ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified.GetFieldDefinitionLabel())" row.
</p>

<hr />
@using (Html.BeginForm())
{
    <div ng-app="ProjectFirmaApp" id="EditFundingSourceBudgetsByCostTypeApp" ng-controller="ExpectedFundingByCostTypeController">
        <div class="form-group">
            <label class="control-label">
                1. Does the @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel() budget vary by year or is it the same?
            </label>
            <div class="input-group">
                <select ng-model="selectedFundingTypeID"
                        class="selectpicker"
                        data-container="body"
                        data-width="100%">
                    <option ng-repeat="fundingType in fundingTypes()"
                            value="{{fundingType.Value}}"
                            ng-selected="selectedFundingTypeID == fundingType.Value"
                            ng-bind="fundingType.Text"></option>
                </select>
                @Html.ValidationMessageFor(m => m.FundingTypeID)
            </div>
        </div>

        <div ng-show="!budgetTypeNotSelected()">
            <div class="form-group">
                <label class="control-label">2. Select the @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized() that are relevant to the  @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel().</label>
                <div style="margin-left: 20px">
                    <label ng-repeat="costType in AngularModel.ProjectRelevantCostTypes | orderBy:'CostTypeName'" style="padding-right: 10px">
                        <input type="checkbox" ng-model="costType.IsRelevant" ng-click="addRemoveCostTypeFromBudgets()" /> <span ng-bind="costType.CostTypeName"></span>
                    </label>
                </div>
            </div>
            <div ng-show="getRelevantCostTypes().length === 0">
                <p class="systemText">You need to select at least one @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel() to enter budgets.</p>
            </div>
            <div ng-show="getRelevantCostTypes().length > 0">
                <div class="form-group">
                    <div style="display: inline-block; vertical-align: top">
                        <label>3. Identify the @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()'s  @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabelPluralized(). You can add more than one.</label>
                    </div>
                    <br />
                    <div class="input-group" style="padding-bottom: 5px; margin-left: 20px">
                        <select ng-model="fundingSourceIDToAdd"
                                class="selectpicker"
                                data-live-search="true"
                                data-container="body"
                                title="Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add"
                                data-width="70%">
                            <option value="null" disabled selected>Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add</option>
                            <option ng-repeat="fundingSource in filteredFundingSources()"
                                    value="{{fundingSource.FundingSourceID}}"
                                    ng-selected="fundingSourceIDToAdd == fundingSource.FundingSourceID"
                                    ng-bind="fundingSource.DisplayName"
                                    data-tokens="{{fundingSource.DisplayName}} {{fundingSource.OrganizationFullName}} "></option>
                        </select>
                        <button class="btn btn-firma" type="button" style="margin-left: 5px;" ng-click="addRow()">Add</button>
                        <span style="vertical-align: middle; display: inline-block; margin-left: 5px">
                            Not listed?
                            @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
                        </span>
                        <br />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label">4. Enter amount provided by each @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() for each year and @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel(). If there is no amount to report, enter a zero ($0). </label>
                </div>
                <div style="margin-left: 20px" ng-if="budgetVariesByYear()">
                    <p style="margin-left: 20px" class="systemText" ng-show="getAllUsedFundingSourceIds().length === 0">Add a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to start entering budgets</p>
                    <table class="table-responsive table-condensed" style="display: block; overflow: auto;">
                        <thead>
                            <tr>
                                <th style="white-space: nowrap" colspan="2">
                                    <span ng-show="getAllUsedFundingSourceIds().length > 0"> @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForFundingSource)</span>
                                </th>
                                <th ng-repeat-start="calendarYear in calendarYearRange" style="text-align: right; vertical-align: top">
                                    <span ng-show="$first && getAllUsedFundingSourceIds().length > 0" class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                                    <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$first && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span>
                                    <span ng-show="getAllUsedFundingSourceIds().length > 0" ng-bind="calendarYear"></span>
                                    <span ng-show="getAllUsedFundingSourceIds().length > 0"> @ViewDataTyped.FieldDefinitionForSecuredFunding.GetFieldDefinitionLabel()</span>
                                </th>
                                <th ng-repeat-end style="text-align: right; vertical-align: top">
                                    <span ng-show="$first && getAllUsedFundingSourceIds().length == 0" class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                                    <span ng-bind="calendarYear"></span>
                                    <span ng-show="getAllUsedFundingSourceIds().length > 0"> @ViewDataTyped.FieldDefinitionForTargetedFunding.GetFieldDefinitionLabel()</span>
                                    <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                                    <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$last && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span>
                                </th>
                                <th style="text-align: right">Total</th>
                            </tr>
                        </thead>
                        <tbody ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]" style="border-top: 2px solid #ddd">
                            <tr>
                                <td style="width: 30px; min-width: 30px;"><span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer;"></span></td>
                                <td colspan="{{calendarYearRange.length + 2}}"><label class="control-label"><span ng-bind="getFundingSourceNameById(fundingSourceID)"></span></label></td>
                            </tr>
                            @* Budget Entry Rows *@
                            <tr ng-repeat="projectFundingSourceBudget in getProjectFundingSourceBudgetRowsForFundingSource(fundingSourceID) | orderBy:[getFundingSourceName]">
                                <td style="width: 30px; min-width: 30px;"></td>
                                <td ng-bind="getCostTypeName(projectFundingSourceBudget)" />
                                <td style="text-align: right;" ng-repeat-start="calendarYearBudget in getRelevantCalendarYearBudgets(projectFundingSourceBudget) | orderBy:'CalendarYear'">
                                    <input type="text" ng-model="calendarYearBudget.SecuredAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                                </td>
                                <td style="text-align: right;" ng-repeat-end>
                                    <input type="text" ng-model="calendarYearBudget.TargetedAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                                </td>
                                <th style="text-align: right"> {{getBudgetTotalForRow(projectFundingSourceBudget) | currency:"$"}}</th>
                            </tr>
                            @* Sum of budgets for funding source*@
                            <tr>
                                <td style="width: 30px; min-width: 30px;"></td>
                                <th style="white-space: nowrap">
                                    All @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized()
                                </th>
                                <th style="text-align: right;" ng-repeat-start="calendarYear in calendarYearRange">
                                    <span> {{getBudgetTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear, true) | currency:"$"}}</span>
                                </th>
                                <th style="text-align: right;" ng-repeat-end>
                                    <span> {{getBudgetTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear, false) | currency:"$"}}</span>
                                </th>
                                <th style="text-align: right"> {{getBudgetTotalForFundingSource(fundingSourceID) | currency:"$"}}</th>
                            </tr>
                        </tbody>

                        <tbody style="border-top: 2px solid #ddd">
                            <tr>
                                <td colspan="2">@Html.LabelWithSugarFor(@ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified)</td>
                                <td ng-repeat-start="calendarYearNoFunding in getNoFundingSourceAmounts() | orderBy:'CalendarYear'"></td>
                                <td ng-repeat-end style="text-align: right">
                                    <input type="text" ng-model="calendarYearNoFunding.MonetaryAmount" class="sitkaCurrency form-control" ng-currency />
                                </td>
                                <th style="text-align: right"> {{getNoFundingSourceIdentifiedTotalForCalendarYear() | currency:"$"}}</th>
                            </tr>
                        </tbody>
                        <tbody style="border-top: 2px solid #ddd">
                            <tr>
                                <td colspan="2">@Html.LabelWithSugarFor(FieldDefinitionEnum.EstimatedTotalCost.ToType())</td>
                                <th ng-repeat-start="calendarYear in calendarYearRange" style="text-align: right">
                                    <span ng-show="getAllUsedFundingSourceIds().length > 0">{{getTotalForCalendarYear(calendarYear, true) | currency:"$"}}</span>
                                </th>
                                <th ng-repeat-end style="text-align: right"> {{getTotalForCalendarYear(calendarYear, false) | currency:"$"}}</th>
                                <th style="text-align: right"> {{getTotalForCalendarYear() | currency:"$"}}</th>
                            </tr>
                        </tbody>
                    </table>
                    <div ng-repeat="projectFundingSourceBudget in getRelevantProjectFundingSourceBudgets()">
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.FundingSourceID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.CostTypeID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.IsRelevant}}" />
                        <div ng-repeat="calendarYearBudget in getRelevantCalendarYearBudgets(projectFundingSourceBudget) | orderBy:'CalendarYear'">
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.CalendarYear}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].SecuredAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.SecuredAmount}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].TargetedAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.TargetedAmount}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].IsRelevant).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.IsRelevant}}" />
                        </div>
                    </div>
                    <div ng-repeat="calendarYearNoFunding in AngularModel.NoFundingSourceAmounts | orderBy:'CalendarYear'">
                        <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceAmounts[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{calendarYearNoFunding.CalendarYear}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceAmounts[0].MonetaryAmount).ToString().Replace("0", "{{$index}}")" value="{{calendarYearNoFunding.MonetaryAmount}}" />
                    </div>
                </div>
            </div>

            <div style="margin-left: 20px" ng-if="budgetSameEachYear()">
                <table class="table-responsive table-condensed" style="display: block; overflow: auto;">
                    <thead>
                        <tr>
                            <th style="white-space: nowrap" colspan="2">
                                <span ng-show="getAllUsedFundingSourceIds().length > 0"> @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForFundingSource)</span>
                            </th>
                            <th>
                                <span ng-show="getAllUsedFundingSourceIds().length > 0">Each Year @ViewDataTyped.FieldDefinitionForSecuredFunding.GetFieldDefinitionLabel()</span>
                            </th>
                            <th>
                                <span ng-show="getAllUsedFundingSourceIds().length > 0">Each Year @ViewDataTyped.FieldDefinitionForTargetedFunding.GetFieldDefinitionLabel()</span>
                            </th>
                            <th style="text-align: right">Total</th>
                        </tr>
                    </thead>
                    <tbody ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]" style="border-top: 2px solid #ddd">
                        <tr>
                            <td style="width: 30px; min-width: 30px;"><span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer;"></span></td>
                            <td colspan="4"><label class="control-label"><span ng-bind="getFundingSourceNameById(fundingSourceID)"></span></label></td>
                        </tr>
                        @* Budget Entry Rows *@
                        <tr ng-repeat="projectFundingSourceBudget in getProjectFundingSourceBudgetRowsForFundingSource(fundingSourceID) | orderBy:[getFundingSourceName]">
                            <td style="width: 30px; min-width: 30px;"></td>
                            <td ng-bind="getCostTypeName(projectFundingSourceBudget)" />
                            <td style="text-align: right;">
                                <input type="text" ng-model="projectFundingSourceBudget.SecuredAmount" class="sitkaCurrency form-control" ng-currency />
                            </td>
                            <td style="text-align: right;">
                                <input type="text" ng-model="projectFundingSourceBudget.TargetedAmount" class="sitkaCurrency form-control" ng-currency />
                            </td>
                            <th style="text-align: right"> {{getBudgetTotalForRowSameEachYear(projectFundingSourceBudget) | currency:"$"}}</th>
                        </tr>
                        @* Sum of budgets for funding source*@
                        <tr>
                            <td style="width: 30px; min-width: 30px;"></td>
                            <th style="white-space: nowrap">
                                All @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized()
                            </th>
                            <th style="text-align: right;">
                                <span> {{getBudgetTotalForFundingSourceSameEachYear(fundingSourceID, true) | currency:"$"}}</span>
                            </th>
                            <th style="text-align: right;">
                                <span> {{getBudgetTotalForFundingSourceSameEachYear(fundingSourceID, false) | currency:"$"}}</span>
                            </th>
                            <th style="text-align: right"> {{getBudgetTotalForFundingSourceSameEachYear(fundingSourceID) | currency:"$"}}</th>
                        </tr>
                    </tbody>
                    <tbody style="border-top: 2px solid #ddd">
                        <tr>
                            <td colspan="2">@Html.LabelWithSugarFor(@ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified)</td>
                            <td></td>
                            <td style="text-align: right">
                                <input type="text" ng-model="AngularModel.NoFundingSourceIdentifiedYet" class="sitkaCurrency form-control" ng-currency />
                            </td>
                            <th style="text-align: right"> {{AngularModel.NoFundingSourceIdentifiedYet | currency:"$"}}</th>
                        </tr>
                    </tbody>
                    <tbody style="border-top: 2px solid #ddd">
                        <tr>
                            <td colspan="2">@Html.LabelWithSugarFor(FieldDefinitionEnum.EstimatedAnnualOperatingCost.ToType())</td>
                            <th style="text-align: right">
                                <span ng-show="getAllUsedFundingSourceIds().length > 0">{{getTotalSameEachYear(true) | currency:"$"}}</span>
                            </th>
                            <th style="text-align: right"> {{getTotalSameEachYear(false) | currency:"$"}}</th>
                            <th style="text-align: right"> {{getTotalSameEachYear() | currency:"$"}}</th>
                        </tr>
                    </tbody>
                </table>

                <div ng-repeat="projectFundingSourceBudget in getRelevantProjectFundingSourceBudgets() | orderBy:[getFundingSourceName]">
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.FundingSourceID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.CostTypeID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.IsRelevant}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].SecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.SecuredAmount}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].TargetedAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.TargetedAmount}}" />
                </div>
                <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceIdentifiedYet).ToString()" value="{{AngularModel.NoFundingSourceIdentifiedYet}}" />
            </div>
            <div ng-repeat="projectRelevantCostType in AngularModel.ProjectRelevantCostTypes">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeName).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeName}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectRelevantCostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectRelevantCostTypeID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.IsRelevant}}" />
            </div>

        </div>

        <input type="hidden" name="@Html.NameFor(x => x.FundingTypeID)" value="{{selectedFundingTypeID}}" />

        <div class="row">
            <div style="text-align: right; white-space: nowrap">
                <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
            </div>
        </div>
    </div>
}
