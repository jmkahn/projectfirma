@*-----------------------------------------------------------------------
<copyright file="EditProjectFundingSourceExpenditures.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectFundingSourceExpenditure.EditProjectFundingSourceExpenditures
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    angular.bootstrap(jQuery("#EditFundingSourceExpendituresApp"), ["ProjectFirmaApp"]);
    jQuery(".selectpicker").selectpicker("refresh");
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div ng-app="ProjectFirmaApp" id="EditFundingSourceExpendituresApp" ng-controller="ProjectFundingSourceExpenditureController" style="max-height: 600px; overflow-y: auto">
    <div style="margin-top: 5px">
        <strong>1. </strong>
        <a style="font-weight: bold; cursor: pointer" ng-click="AngularViewData.ShowNoExpendituresExplanation = !AngularViewData.ShowNoExpendituresExplanation">
            What if the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() has no expenditures to report?
            <i ng-class="AngularViewData.ShowNoExpendituresExplanation ? 'glyphicon glyphicon-chevron-up' : 'glyphicon glyphicon-chevron-down'"></i>
        </a>
        <div ng-show="AngularViewData.ShowNoExpendituresExplanation">
            Select the years for which you have no expenditures to report and provide a brief explanation.
            <a style="cursor: pointer" ng-click="selectAllYears(true)">Select All</a> |
            <a style="cursor: pointer" ng-click="selectAllYears(false)">Unselect All</a>
            <div>
                <label ng-repeat="projectExemptReportingYear in AngularModel.ProjectExemptReportingYears | orderBy: 'CalendarYear'" style="padding-right: 10px">
                    <input type="checkbox" ng-model="projectExemptReportingYear.IsExempt"/> <span ng-bind="projectExemptReportingYear.CalendarYearDisplay"></span>
                </label>
            </div>
            <textarea class="form-control" cols="20" ng-model="AngularModel.Explanation" placeholder="Explanation here" rows="2" style="width: 100%">{{AngularModel.Explanation}}</textarea>
        </div>
    </div>    
    <hr />
    <div class="form-group">
        <label class="control-label">2. Identify the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized().  You can add more than one.</label>
        <div class="input-group">
            <select ng-model="FundingSourceIDToAdd"
                    class="selectpicker"
                    data-live-search="true"
                    data-container="body"
                    title="Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add"
                    data-width="100%">
                <option value="null" disabled selected>Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add</option>
                <option ng-repeat="fundingSource in filteredFundingSources()"
                        value="{{fundingSource.FundingSourceID}}"
                        ng-selected="FundingSourceIDToAdd == fundingSource.FundingSourceID"
                        ng-bind="fundingSource.DisplayName"
                        data-tokens="{{fundingSource.DisplayName}}  {{fundingSource.OrganizationFullName}} "></option>
            </select>
            <span class="input-group-btn">
                <button class="btn btn-firma" type="button" ng-click="addRow()">
                    <span class="glyphicon glyphicon-plus"></span> Add
                </button>
            </span>
        </div>
        <br />
    </div>
    <div>
        <label>3. Enter expenditures for each year and @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel().</label>
    </div>
    <div ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName, getProjectName]">
        <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceExpenditure)" style="cursor: pointer"></span>
        <label ng-bind="@(ViewDataTyped.FromFundingSource ? "getProjectName(projectFundingSourceExpenditure)" : "getFundingSourceName(projectFundingSourceExpenditure)")"></label>

        <table class="table table-responsive table-condensed dialogFormLayout"
               style="margin-bottom: 25px; display: block; overflow: auto; background-color: #f1f1f1">
            <thead>
            <tr>
                <th></th>
                <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                    <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$first" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                    <span ng-bind="formatCalendarYear(calendarYear)"></span>
                    <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$last" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                </th>
                <th style="text-align: right">Total</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Amount:</td>
                <td ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'-CalendarYear'">
                    <input style="text-align: right" type="text" ng-model="calendarYearExpenditure.MonetaryAmount" class="sitkaCurrency form-control" style="width: 96px;" ng-currency />
                </td>
                <td style="text-align: right; font-weight: bold;">
                    {{getExpenditureTotalForRow(projectFundingSourceExpenditure) | currency:"$"}}
                </td>
            </tr>
            </tbody>
        </table>
    </div>

    <div ng-show="AngularModel.ProjectFundingSourceExpenditures.length > 0">
        <label>Total</label>
        <table class="table table-responsive table-condensed dialogFormLayout" style="margin-bottom: 20px; display: block; overflow: auto; background-color: #f1f1f1">
            <thead>
                <tr>
                    <th></th>
                    <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$first" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                        <span ng-bind="formatCalendarYear(calendarYear)"></span>
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$last" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                    </th>
                    <th style="text-align: right">Total</th>
                </tr>
            </thead>
            <tbody>
                <tr style="font-weight: bold;">
                    <td>All @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel())s:</td>
                    <td ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right">
                        {{getExpenditureTotalForCalendarYear(calendarYear) | currency:"$"}}
                    </td>
                    <td style="text-align: right">
                        {{getExpenditureTotalForCalendarYear() | currency:"$"}}
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(x => x.ProjectID)
        <input type="hidden" name="@Html.NameFor(x => x.Explanation)" value="{{AngularModel.Explanation}}" />
        <div ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName, getProjectName]">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.ProjectID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.FundingSourceID}}" />
            <div ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.CalendarYear}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.MonetaryAmount}}" />
            </div>
        </div>
        <div ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYear}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYearDisplay).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYearDisplay}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectExemptReportingYearID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectExemptReportingYearID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].IsExempt).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.IsExempt}}" />
        </div>
    }
</div>
